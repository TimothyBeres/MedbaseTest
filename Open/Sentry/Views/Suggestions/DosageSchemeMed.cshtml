@model Open.Facade.Process.SuggestionViewModel
@using System.Collections
@using Open.Facade.Product
@using Open.Sentry1.Extensions
@{
    ViewBag.Title = "Lisa soovitus";
    ViewBag.Button = "Lisa";
    Layout = "_EditPartial";
    string medicineName = "", dateAssigned = "", effects = "";
    Dictionary<string, string> dict = ViewBag.Dictionary;
    var afterError = ViewBag.AfterError;
    var modalHeader = "Teadaolevad vastunäidistused puuduvad";
    var suitability = "Suitable";
    var priority = false;
    string defaultPerson = ViewBag.DefaultPerson;

    if (afterError)
    {
        suitability = "NotSuitable";
        modalHeader = "Hoiatus!";
        medicineName = dict["MedicineName"];
        dateAssigned = dict["DateAssigned"];
        effects = dict["Effects"];
    }
    var persons = ViewBag.Persons as IEnumerable<SelectListItem>;
    //var medicines = ViewBag.Medicines as MedicineViewModelsList ?? new MedicineViewModelsList(null);
    //var prevDisabled = !medicines.HasPreviousPage ? "disabled" : "";
    //var nextDisabled = !medicines.HasNextPage ? "disabled" : "";
}
<div align="center">
    <b>
        Kirjutate soovitust ravimile: @ViewBag.MedicineName
    </b>
</div>

<script src="~/lib/jquery/dist/jquery.js"></script>
@if (afterError)
{
    <script type="text/javascript">
        $(window).on('load', function () {
            $('#loginModal').modal('show');
        });
    </script>
}

<body>
    <div class="form-group">
        <div class="col-md-4" style="margin-top: 10px">
            <div class="form-horizontal">
                <b>Lisa patsient(isikukoodi järgi): </b>@Html.DropDownList("personId", new SelectList(persons, "Value", "Text",defaultPerson), new { @class = "selectpicker" })
            </div>
        </div>
    </div>
<div id="newChildDiv"></div>
<input id="addNewChildButtonController" type="button" value="Lisa annustamisskeem" class="btn btn-primary" data-url="@Url.Action("GetChildPartialView", "Suggestions", Model)" />

    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.MedicineID)
    @Html.EditingControlsFor(model => model.ValidFrom)
    @Html.EditingControlsFor(model => model.ValidTo)
</body>
@section Actions
    {@Html.ActionLink("Tagasi", "Index")}

<style type="text/css">
    .Suitable {
        color: green;
    }

    .NotSuitable {
        color: red;
    }
</style>

<div>
  <fieldset>
    <div class="container">
      <div class="row">
        <div class="col-xs-12">
          <div class="modal fade" tabindex="-1" id="loginModal"
               data-keyboard="false" data-backdrop="static">
            <div class="modal-dialog modal-lg">
              <div class="modal-content">
                <div class="modal-header">
                  <button type="button" class="close" data-dismiss="modal">
                    ×
                  </button>
                  <h4 class="modal-title @suitability" class="">@modalHeader</h4>
                </div>
                <div class="modal-body">
                  @{
                    if (afterError)
                    {
                      <p>Antud ravim ei pruugi sellele patsiendile sobida eelneva probleemi tõttu:</p>
                      <p>Ravimi nimi: @medicineName</p>
                      <p>Tomeained ravimis: @effects</p>
                      <p>Soovituse tegemise kuupäev: @dateAssigned</p>
                    }
                    else
                    {
                      <p>Võite jätkata soovituse kinnitamisega</p>
                    }
                  }
                </div>
                <div class="modal-footer">
                  <button type="sumbit" name="button" value="prior" class="btn btn-primary button button4">Kinnita soovitus</button>
                  <button type="button" id="btnHideModal" class="btn btn-primary button button4">
                    Katkesta
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </fieldset>
</div>
  
<script type="text/javascript">
  let requestVerificationToken = $("input[name='__RequestVerificationToken']").val();

  $("#addNewChildButtonController").click(function () {
    console.log("Controller Button clicked");
    console.log($("#addNewChildButtonController").data("url"));

    $.ajax({
      type: "GET",
      url: "/Suggestions/GetChildPartialView",
      headers: {
        "RequestVerificationToken": requestVerificationToken
      }
    }).done(function (data, statusText, xhdr) {
      console.log("Done");
      $("#newChildDiv").after(data);
      $("#addNewChildButtonController").hide();
    }).fail(function (xhdr, statusText, errorText) {
      console.log("Failed");
      $("#newChildDiv").text(JSON.stringify(xhdr));
    });
  });

  $(document).on('click', '.deleteButton', function(e) {
    e.preventDefault();
    const elementToRemove = document.getElementById(e.target.id).parentNode;

    // The lower the number, the faster it goes
    jQuery(elementToRemove).fadeOut('slow', function () {
      elementToRemove.remove();
    });
    $("#addNewChildButtonController").show();
  });
</script>